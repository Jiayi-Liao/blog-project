***
> 偶尔发现了fabric，发现还确实是一个比较好用的远程部署工具，花了点时间给自己这个博客做了一个一键部署。其实用shell也可以实现，但是fabric提供的便利性不止一点点。
### 场景
> 之前部署博客的时候，在电脑上git commit/push之后登陆阿里云终端然后 fetch/pull，再 test/restart，是不是一个很繁琐的过程？借着学习fabric正好把它简化一下！！！
### fabric介绍
> 简单来说，fabric就是一个执行local和remote命令的python工具库。  
> fabric执行原理就是利用了subprocess，熟悉Python的人对这个库肯定不会陌生。Fabric中比较重要的两个概念，一个是Executor，就是执行器，分为串行执行器和并行执行器；另一个是Task，fabfile中每一个函数表示一个Task，如何定义并实现Task就是fabric高效与否的保证啦。
### fabric远程部署案例
> 自己的话用的比较简单，直接看代码。
> ```
from fabric.api import *  
env.hosts = ['root@101.200.171.13']  
def test():  
    local('./manage.py test')  
def add():  
    local('git checkout develop && git add -A')  
def commit():  
    local('git commit -am "fixed"  ')  
def fetch():  
    local('git fetch origin develop && git pull origin develop')  
def push():  
    local('git push -u origin develop')  
def deploy():  
    blog_dir = '/server/projects/wind_blog/blog-project'  
    test()  
    add()  
    commit()  
    push()  
    # remote deploy  
    with prefix('cd ' + blog_dir + ' && source  ../bin/activate'):  
        run('source ../bin/activate')  
        run('source /etc/profile')  
        run('git checkout develop && git pull origin develop')  
        run('./manage.py test --settings wind_blog.production')  
        run('pkill gunicorn')  
        run('sleep 1')  
        run('gunicorn wind_blog.wsgi -c gunicorn_setting.py', pty = False)  
> ```   
> 上面一小段代码展示了一些fabric的特性，包括local和run的使用，with prefix这个可以用命令创造一个上下文，这个特性还是挺不错的，fabric还具有对Exception进行Handler的一些操作都是比较实用的。
